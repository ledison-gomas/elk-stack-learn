persistence:
  enabled: true

logstashConfig:
  logstash.yml: |
    http.host: 0.0.0.0
    xpack.monitoring.enabled: false

logstashPipeline: 
 logstash.conf: |
    input {
       beats {
        port => 5044
      }
    }
    filter {
        if "json" in [tags] {
          json {
              source => "message"
          }
        }
        if "keyvalue" in [tags] {
          kv {
          }
        }
        if "appkeyvalue" in [tags] {
            grok {
                match => [
                "message", "%{TIMESTAMP_ISO8601:timeStamp}\|%{LOGLEVEL:logLevel}\|(?:%{DATA:appName})\|P%{NUMBER:processId}\|T%{NUMBER:thread_id}\|%{PATH:fileName}\|%{DATA:funcName}\|L%{NUMBER:lineNum}\|%{DATA:correlationId}\|%{GREEDYDATA:msg}"
                ]
            }
            if [msg] {
              kv{
                source => "msg"
              }
            }
        }
    }
    output {
       elasticsearch {
          hosts => ["https://elasticsearch-master:9200"]
          user => '${ELASTICSEARCH_USERNAME}'
          cacert => '/usr/share/logstash/config/certs/ca.crt'
          password => '${ELASTICSEARCH_PASSWORD}'
          ecs_compatibility => "disabled"
          doc_as_upsert => "true"
       }
    }



service:
  annotations: {}
  type: ClusterIP
  loadBalancerIP: ""
  ports:
    - name: beats
      port: 5044
      protocol: TCP
      targetPort: 5044
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080

extraEnvs:
  - name: "ELASTICSEARCH_USERNAME"
    valueFrom:
      secretKeyRef:
        name: elasticsearch-master-credentials
        key: username
  - name: "ELASTICSEARCH_PASSWORD"
    valueFrom:
      secretKeyRef:
        name: elasticsearch-master-credentials
        key: password

secretMounts: 
  - name: elasticsearch-master-certs
    secretName: elasticsearch-master-certs
    path: /usr/share/logstash/config/certs